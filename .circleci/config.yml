version: 2.1

orbs:
  python: rdgozum/python@<<pipeline.parameters.dev-orb-version>>
  orb-tools: circleci/orb-tools@10.0

executors:
  ci-base:
    docker:
      - image: cibuilds/base

# Pipeline Parameters
parameters:
  run-integration-tests:
    description: An internal flag to prevent integration test from running before a development version has been created.
    type: boolean
    default: false

  dev-orb-version:
    description: >
      The development version of the orb to test.
      This value is automatically adjusted by the "trigger-integration-tests-workflow" job to correspond with the specific version created by the commit and should not be edited.
      A "dev:alpha" version must exist for the initial pipeline run.
    type: string
    default: "dev:alpha"

commands:
  capture-tag:
    steps:
      - checkout
      - attach_workspace:
          at: ./workspace
      - run: cat workspace/env-var >> $BASH_ENV
      - run: source $BASH_ENV
      - run: echo $CIRCLE_TAG

jobs:
  integration-test-1:
    executor: ci-base
    steps:
      - checkout
      - python/greet

  tag-commit:
    executor: ci-base
    steps:
      - checkout

      - add_ssh_keys:
          fingerprints:
            - "62:e3:c9:56:92:9d:f3:45:4a:db:49:ed:fc:97:3b:a6"

      - orb-tools/configure-git

      - run:
          name: git tag
          command: |
            VERSION=$(cat src/version.txt)
            if [ "$CIRCLE_BRANCH" = "main" ]; then
              INTEGRATION_TAG=$VERSION
            else
              INTEGRATION_TAG=${CIRCLE_SHA1:0:7}-$VERSION
            fi
            git tag $INTEGRATION_TAG
            git push origin $INTEGRATION_TAG

  capture-tag:
    executor: ci-base
    steps:
      - checkout

      - run:
          name: capture tag
          command: |
              if git describe --tags $(git rev-parse HEAD); then
                mkdir -p workspace
                echo 'export CIRCLE_TAG="$(git describe --tags $(git rev-parse HEAD))"' >> workspace/env-var
              else
                echo "$(git rev-parse HEAD) is not a tagged commit."
              fi

      - persist_to_workspace:
          root: workspace
          paths: env-var

# yaml anchor filters
integration_filter: &integration_filter
  filters:
    branches:
      only: /(develop|main)/

release_filter: &release_filter
  filters:
    branches:
      only: main
    tags:
      only: /^(major|minor|patch)-release-v\d+\.\d+\.\d+$/

workflows:
  version: 2
  build_unit-test_publish-dev:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint

      - orb-tools/pack

      - hold-for-dev-publish:
          type: approval
          requires:
            - orb-tools/lint
            - orb-tools/pack
          <<: *integration_filter

      - tag-commit:
          requires:
            - hold-for-dev-publish
          <<: *integration_filter

      - orb-tools/publish-dev:
          orb-name: rdgozum/python
          context: orb-publishing
          requires:
            - tag-commit
          <<: *integration_filter

      - orb-tools/trigger-integration-tests-workflow:
          name: trigger-integration-dev
          context: orb-publishing
          requires:
            - orb-tools/publish-dev
          <<: *integration_filter

  integration-test_publish-prod:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      - integration-test-1:
          <<: *integration_filter

      - capture-tag:
          requires:
            - integration-test-1
          <<: *integration_filter

      - orb-tools/dev-promote-prod-from-git-tag:
          orb-name: rdgozum/python
          context: orb-publishing
          add-pr-comment: false
          checkout: false
          required-branch: main
          pre-steps:
            - capture-tag
          requires:
            - capture-tag
          <<: *release_filter
